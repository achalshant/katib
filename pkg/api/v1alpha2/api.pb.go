// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package api_v1_alpha2 is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	GetSuggestionsRequest
	GetSuggestionsReply
	ValidateAlgorithmSettingsRequest
	ValidateAlgorithmSettingsReply
*/
package api_v1_alpha2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import dbif_v1_alpha2 "dbif"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetSuggestionsRequest struct {
	ExperimentName string `protobuf:"bytes,1,opt,name=experiment_name,json=experimentName" json:"experiment_name,omitempty"`
	AlgorithmName  string `protobuf:"bytes,2,opt,name=algorithm_name,json=algorithmName" json:"algorithm_name,omitempty"`
	RequestNumber  int32  `protobuf:"varint,3,opt,name=request_number,json=requestNumber" json:"request_number,omitempty"`
}

func (m *GetSuggestionsRequest) Reset()                    { *m = GetSuggestionsRequest{} }
func (m *GetSuggestionsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSuggestionsRequest) ProtoMessage()               {}
func (*GetSuggestionsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetSuggestionsRequest) GetExperimentName() string {
	if m != nil {
		return m.ExperimentName
	}
	return ""
}

func (m *GetSuggestionsRequest) GetAlgorithmName() string {
	if m != nil {
		return m.AlgorithmName
	}
	return ""
}

func (m *GetSuggestionsRequest) GetRequestNumber() int32 {
	if m != nil {
		return m.RequestNumber
	}
	return 0
}

type GetSuggestionsReply struct {
	Trials *dbif_v1_alpha2.Trial `protobuf:"bytes,1,opt,name=trials" json:"trials,omitempty"`
}

func (m *GetSuggestionsReply) Reset()                    { *m = GetSuggestionsReply{} }
func (m *GetSuggestionsReply) String() string            { return proto.CompactTextString(m) }
func (*GetSuggestionsReply) ProtoMessage()               {}
func (*GetSuggestionsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetSuggestionsReply) GetTrials() *dbif_v1_alpha2.Trial {
	if m != nil {
		return m.Trials
	}
	return nil
}

type ValidateAlgorithmSettingsRequest struct {
	ExperimentSpec *dbif_v1_alpha2.ExperimentSpec `protobuf:"bytes,1,opt,name=experiment_spec,json=experimentSpec" json:"experiment_spec,omitempty"`
	AlgorithmName  string                         `protobuf:"bytes,2,opt,name=algorithm_name,json=algorithmName" json:"algorithm_name,omitempty"`
}

func (m *ValidateAlgorithmSettingsRequest) Reset()         { *m = ValidateAlgorithmSettingsRequest{} }
func (m *ValidateAlgorithmSettingsRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateAlgorithmSettingsRequest) ProtoMessage()    {}
func (*ValidateAlgorithmSettingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2}
}

func (m *ValidateAlgorithmSettingsRequest) GetExperimentSpec() *dbif_v1_alpha2.ExperimentSpec {
	if m != nil {
		return m.ExperimentSpec
	}
	return nil
}

func (m *ValidateAlgorithmSettingsRequest) GetAlgorithmName() string {
	if m != nil {
		return m.AlgorithmName
	}
	return ""
}

// *
// Return INVALID_ARGUMENT Error if Algorithm Settings are not Valid
type ValidateAlgorithmSettingsReply struct {
}

func (m *ValidateAlgorithmSettingsReply) Reset()                    { *m = ValidateAlgorithmSettingsReply{} }
func (m *ValidateAlgorithmSettingsReply) String() string            { return proto.CompactTextString(m) }
func (*ValidateAlgorithmSettingsReply) ProtoMessage()               {}
func (*ValidateAlgorithmSettingsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*GetSuggestionsRequest)(nil), "api.v1.alpha2.GetSuggestionsRequest")
	proto.RegisterType((*GetSuggestionsReply)(nil), "api.v1.alpha2.GetSuggestionsReply")
	proto.RegisterType((*ValidateAlgorithmSettingsRequest)(nil), "api.v1.alpha2.ValidateAlgorithmSettingsRequest")
	proto.RegisterType((*ValidateAlgorithmSettingsReply)(nil), "api.v1.alpha2.ValidateAlgorithmSettingsReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Manager service

type ManagerClient interface {
	// *
	// Get Suggestions from a Suggestion service.
	GetSuggestions(ctx context.Context, in *GetSuggestionsRequest, opts ...grpc.CallOption) (*GetSuggestionsReply, error)
	// *
	// Validate AlgorithmSettings in an Experiment.
	// Suggestion service should return INVALID_ARGUMENT Error when the parameter is invalid
	ValidateAlgorithmSettings(ctx context.Context, in *ValidateAlgorithmSettingsRequest, opts ...grpc.CallOption) (*ValidateAlgorithmSettingsReply, error)
}

type managerClient struct {
	cc *grpc.ClientConn
}

func NewManagerClient(cc *grpc.ClientConn) ManagerClient {
	return &managerClient{cc}
}

func (c *managerClient) GetSuggestions(ctx context.Context, in *GetSuggestionsRequest, opts ...grpc.CallOption) (*GetSuggestionsReply, error) {
	out := new(GetSuggestionsReply)
	err := grpc.Invoke(ctx, "/api.v1.alpha2.Manager/GetSuggestions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managerClient) ValidateAlgorithmSettings(ctx context.Context, in *ValidateAlgorithmSettingsRequest, opts ...grpc.CallOption) (*ValidateAlgorithmSettingsReply, error) {
	out := new(ValidateAlgorithmSettingsReply)
	err := grpc.Invoke(ctx, "/api.v1.alpha2.Manager/ValidateAlgorithmSettings", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Manager service

type ManagerServer interface {
	// *
	// Get Suggestions from a Suggestion service.
	GetSuggestions(context.Context, *GetSuggestionsRequest) (*GetSuggestionsReply, error)
	// *
	// Validate AlgorithmSettings in an Experiment.
	// Suggestion service should return INVALID_ARGUMENT Error when the parameter is invalid
	ValidateAlgorithmSettings(context.Context, *ValidateAlgorithmSettingsRequest) (*ValidateAlgorithmSettingsReply, error)
}

func RegisterManagerServer(s *grpc.Server, srv ManagerServer) {
	s.RegisterService(&_Manager_serviceDesc, srv)
}

func _Manager_GetSuggestions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSuggestionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).GetSuggestions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.alpha2.Manager/GetSuggestions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).GetSuggestions(ctx, req.(*GetSuggestionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Manager_ValidateAlgorithmSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateAlgorithmSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).ValidateAlgorithmSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.alpha2.Manager/ValidateAlgorithmSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).ValidateAlgorithmSettings(ctx, req.(*ValidateAlgorithmSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Manager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.v1.alpha2.Manager",
	HandlerType: (*ManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSuggestions",
			Handler:    _Manager_GetSuggestions_Handler,
		},
		{
			MethodName: "ValidateAlgorithmSettings",
			Handler:    _Manager_ValidateAlgorithmSettings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// Client API for Suggestion service

type SuggestionClient interface {
	GetSuggestions(ctx context.Context, in *GetSuggestionsRequest, opts ...grpc.CallOption) (*GetSuggestionsReply, error)
	ValidateAlgorithmSettings(ctx context.Context, in *ValidateAlgorithmSettingsRequest, opts ...grpc.CallOption) (*ValidateAlgorithmSettingsReply, error)
}

type suggestionClient struct {
	cc *grpc.ClientConn
}

func NewSuggestionClient(cc *grpc.ClientConn) SuggestionClient {
	return &suggestionClient{cc}
}

func (c *suggestionClient) GetSuggestions(ctx context.Context, in *GetSuggestionsRequest, opts ...grpc.CallOption) (*GetSuggestionsReply, error) {
	out := new(GetSuggestionsReply)
	err := grpc.Invoke(ctx, "/api.v1.alpha2.Suggestion/GetSuggestions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *suggestionClient) ValidateAlgorithmSettings(ctx context.Context, in *ValidateAlgorithmSettingsRequest, opts ...grpc.CallOption) (*ValidateAlgorithmSettingsReply, error) {
	out := new(ValidateAlgorithmSettingsReply)
	err := grpc.Invoke(ctx, "/api.v1.alpha2.Suggestion/ValidateAlgorithmSettings", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Suggestion service

type SuggestionServer interface {
	GetSuggestions(context.Context, *GetSuggestionsRequest) (*GetSuggestionsReply, error)
	ValidateAlgorithmSettings(context.Context, *ValidateAlgorithmSettingsRequest) (*ValidateAlgorithmSettingsReply, error)
}

func RegisterSuggestionServer(s *grpc.Server, srv SuggestionServer) {
	s.RegisterService(&_Suggestion_serviceDesc, srv)
}

func _Suggestion_GetSuggestions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSuggestionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SuggestionServer).GetSuggestions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.alpha2.Suggestion/GetSuggestions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SuggestionServer).GetSuggestions(ctx, req.(*GetSuggestionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Suggestion_ValidateAlgorithmSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateAlgorithmSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SuggestionServer).ValidateAlgorithmSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.alpha2.Suggestion/ValidateAlgorithmSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SuggestionServer).ValidateAlgorithmSettings(ctx, req.(*ValidateAlgorithmSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Suggestion_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.v1.alpha2.Suggestion",
	HandlerType: (*SuggestionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSuggestions",
			Handler:    _Suggestion_GetSuggestions_Handler,
		},
		{
			MethodName: "ValidateAlgorithmSettings",
			Handler:    _Suggestion_ValidateAlgorithmSettings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// Client API for EarlyStopping service

type EarlyStoppingClient interface {
}

type earlyStoppingClient struct {
	cc *grpc.ClientConn
}

func NewEarlyStoppingClient(cc *grpc.ClientConn) EarlyStoppingClient {
	return &earlyStoppingClient{cc}
}

// Server API for EarlyStopping service

type EarlyStoppingServer interface {
}

func RegisterEarlyStoppingServer(s *grpc.Server, srv EarlyStoppingServer) {
	s.RegisterService(&_EarlyStopping_serviceDesc, srv)
}

var _EarlyStopping_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.v1.alpha2.EarlyStopping",
	HandlerType: (*EarlyStoppingServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 411 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x93, 0xc1, 0x6e, 0xd3, 0x30,
	0x1c, 0xc6, 0xe5, 0x22, 0x86, 0x66, 0x94, 0x56, 0x32, 0x9a, 0x34, 0x02, 0x9a, 0x22, 0x0b, 0xc6,
	0x34, 0xb4, 0x44, 0x0b, 0xb7, 0xdd, 0x90, 0x98, 0x76, 0x62, 0x87, 0x04, 0x71, 0xe0, 0x32, 0xb9,
	0xed, 0x1f, 0xd7, 0x92, 0x63, 0x1b, 0xc7, 0x45, 0x44, 0xdc, 0xfa, 0x00, 0x1c, 0xe0, 0x3d, 0x78,
	0x05, 0x1e, 0x82, 0x57, 0x80, 0xf7, 0x40, 0x71, 0xd2, 0x94, 0x54, 0x94, 0xf6, 0x82, 0xb8, 0x44,
	0xc9, 0x97, 0x9f, 0xff, 0xfe, 0xbe, 0xcf, 0x09, 0xde, 0x67, 0x46, 0xc4, 0xc6, 0x6a, 0xa7, 0x49,
	0x50, 0xdf, 0xbe, 0x3f, 0x8f, 0x99, 0x34, 0x33, 0x96, 0x86, 0x0f, 0xb9, 0xd6, 0x5c, 0x42, 0xc2,
	0x8c, 0x48, 0x98, 0x52, 0xda, 0x31, 0x27, 0xb4, 0x2a, 0x1b, 0x38, 0x1c, 0x4d, 0xc7, 0xe2, 0x6d,
	0x52, 0x5f, 0x1a, 0x81, 0x7e, 0x42, 0xf8, 0xe0, 0x0a, 0x5c, 0x3e, 0xe7, 0x1c, 0x4a, 0x4f, 0x66,
	0xf0, 0x6e, 0x0e, 0xa5, 0x23, 0x4f, 0xf0, 0x08, 0x3e, 0x18, 0xb0, 0xa2, 0x00, 0xe5, 0x6e, 0x14,
	0x2b, 0xe0, 0x10, 0x45, 0xe8, 0x64, 0x3f, 0x1b, 0xae, 0xe4, 0x6b, 0x56, 0x00, 0x79, 0x8c, 0x87,
	0x4c, 0x72, 0x6d, 0x85, 0x9b, 0x15, 0x0d, 0x37, 0xf0, 0x5c, 0xd0, 0xa9, 0x4b, 0xcc, 0x36, 0xa3,
	0x6f, 0xd4, 0xbc, 0x18, 0x83, 0x3d, 0xbc, 0x15, 0xa1, 0x93, 0xdb, 0x59, 0xd0, 0xaa, 0xd7, 0x5e,
	0xa4, 0x2f, 0xf0, 0xbd, 0x75, 0x3f, 0x46, 0x56, 0xe4, 0x0c, 0xef, 0x39, 0x2b, 0x98, 0x2c, 0xbd,
	0x89, 0xbb, 0xe9, 0x41, 0xec, 0x43, 0x74, 0xb9, 0xe3, 0x57, 0xf5, 0xdb, 0xac, 0x85, 0xe8, 0x67,
	0x84, 0xa3, 0xd7, 0x4c, 0x8a, 0x29, 0x73, 0xf0, 0x7c, 0x69, 0x23, 0x07, 0xe7, 0x84, 0xe2, 0x5d,
	0xc2, 0xab, 0x5e, 0xc2, 0xd2, 0xc0, 0xa4, 0x1d, 0x7e, 0xb4, 0x3e, 0xfc, 0xb2, 0xc3, 0x72, 0x03,
	0x93, 0xdf, 0x1b, 0xa8, 0x9f, 0x77, 0x6c, 0x80, 0x46, 0xf8, 0xe8, 0x2f, 0x9e, 0x8c, 0xac, 0xd2,
	0x6f, 0x03, 0x7c, 0xe7, 0x25, 0x53, 0x8c, 0x83, 0x25, 0x0b, 0x84, 0x87, 0xfd, 0x26, 0xc8, 0xa3,
	0xb8, 0x77, 0xd6, 0xf1, 0x1f, 0x0f, 0x2e, 0xa4, 0x5b, 0x28, 0x23, 0x2b, 0x7a, 0xbc, 0xf8, 0xfe,
	0xe3, 0xcb, 0x20, 0xa2, 0x0f, 0xfc, 0x77, 0xd2, 0x6e, 0x99, 0xf4, 0xc9, 0x0b, 0x74, 0x4a, 0xbe,
	0x22, 0x7c, 0x7f, 0xa3, 0x67, 0x92, 0xac, 0xed, 0xb4, 0xad, 0xf1, 0xf0, 0x6c, 0xf7, 0x05, 0xb5,
	0xcb, 0x73, 0xef, 0xf2, 0x29, 0x3d, 0xee, 0xb9, 0xdc, 0xb8, 0xe8, 0x02, 0x9d, 0xa6, 0x3f, 0x11,
	0xc6, 0xab, 0x0c, 0xe4, 0xcd, 0xbf, 0xeb, 0x90, 0x7c, 0xfc, 0x8f, 0xd5, 0xa4, 0x23, 0x1c, 0x5c,
	0x32, 0x2b, 0xab, 0xdc, 0x69, 0x63, 0x84, 0xe2, 0xe3, 0x3d, 0xff, 0x3f, 0x3f, 0xfb, 0x15, 0x00,
	0x00, 0xff, 0xff, 0xbf, 0x14, 0xb2, 0xb1, 0x1a, 0x04, 0x00, 0x00,
}
